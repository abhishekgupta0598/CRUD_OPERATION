{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RetailerList","props","deleteHandler","index","console","log","id","state","list2","axios","delete","catch","err","then","setState","list0","filter","data","window","alert","submitHandler","e","preventDefault","post","name","job","error","res","push","map","item","render","list","classes","className","root","Paper","float","elevation","createdAt","Button","variant","box","onClick","left","type","onChange","target","value","first_name","last_name","email","avatar","get","headers","Accept","Component","withStyles","theme","width","padding","marginRight","paddingLeft","paddingRight","paddingTop","paddingBottom","breakpoints","up","marginLeft","withTheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.d12aa93a.chunk.js","sourcesContent":["import \"materialize-css/dist/css/materialize.min.css\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@mui/material/Paper\";\n\nconst styles = (theme) => ({\n  root: {\n    width: \"100%\",\n    padding: \"1%\",\n  },\n  float: {\n    float: \"none\",\n    width: \"100%\",\n    marginRight: \"1%\",\n    paddingLeft: \"3%\",\n    paddingRight: \"3%\",\n    paddingTop: \"1%\",\n    paddingBottom: \"1%\",\n    [theme.breakpoints.up(\"md\")]: {\n      float: \"left\",\n      width: \"58%\",\n      paddingLeft: \"3%\",\n      paddingRight: \"3%\",\n      paddingTop: \"1%\",\n      paddingBottom: \"1%\",\n      marginRight: \"1%\",\n      marginLeft: \"1%\",\n    },\n  },\n  left: {\n    float: \"none\",\n    width: \"100%\",\n    marginRight: \"1%\",\n    paddingLeft: \"3%\",\n    paddingRight: \"3%\",\n    paddingTop: \"1%\",\n    paddingBottom: \"1%\",\n    [theme.breakpoints.up(\"md\")]: {\n      float: \"left\",\n      width: \"39%\",\n      marginRight: \"1%\",\n      paddingLeft: \"3%\",\n      paddingRight: \"3%\",\n      paddingTop: \"1%\",\n      paddingBottom: \"1%\",\n    },\n  },\n  box: {\n    marginRight: \"2%\",\n    width: \"30%\",\n  },\n});\n\nclass RetailerList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n      list2: [],\n      list0: [],\n      id: \"\",\n      name: \"\",\n      job: \"\",\n    };\n  }\n  componentDidMount() {\n    const config = {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    axios\n      .get(\"https://reqres.in/api/users?page=2\", config)\n      .then((res) => {\n        console.log(res.data.data);\n        this.setState({\n          list: res.data.data.map((item, index) => {\n            return { index: index, ...item };\n          }),\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  deleteHandler = (index) => {\n    console.log(index);\n    let id = this.state.list2[index].id;\n    console.log(id);\n    axios\n      .delete(`https://reqres.in/api/users/${id}`)\n      .catch((err) => console.log(err))\n      .then(() => {\n        this.setState({\n          list0: this.state.list0.filter((data) => {\n            return data.id !== id;\n          }),\n        });\n        this.setState({ list2: this.state.list0 });\n        window.alert(`User ${id} Deleted Sucessfully!`);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"https://reqres.in/api/users\", {\n        id: this.state.id,\n        name: this.state.name,\n        job: this.state.job,\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .then((res) => {\n        console.log(res);\n        this.state.list0.push(res.data);\n        console.log(this.state.list0);\n        this.setState({\n          list2: this.state.list0.map((item, index) => {\n            return { index: index, ...item };\n          }),\n        });\n        console.log(this.state.list2);\n        window.alert(`User Added Sucessfully!`);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render = () => {\n    console.log(\"render called for users\");\n    console.log(this.state.list);\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <div>\n          <p>\n            <b>Note:</b>There is no Backend So if you refresh the page the data\n            is destroy.\n          </p>\n        </div>\n        <Paper className={classes.float} elevation={3}>\n          <div>\n            <table>\n              <thead>\n                <tr>\n                  <th>id</th>\n                  <th>name</th>\n                  <th>job</th>\n                  <th>createdAt</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.list2.map((res, index) => {\n                  return (\n                    <tr key={res.id}>\n                      <td>{res.id}</td>\n                      <td>{res.name}</td>\n                      <td>{res.job}</td>\n                      <td>{res.createdAt}</td>\n                      <td>\n                        {\n                          <Button\n                            variant=\"contained\"\n                            className={classes.box}\n                            onClick={() => this.deleteHandler(index)}\n                          >\n                            DELETE\n                          </Button>\n                        }\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </Paper>\n        <div>\n          <Paper elevation={3} className={classes.left}>\n            <div>\n              <h5>Users</h5>\n              <form>\n                <div>\n                  <label>id : </label>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => this.setState({ id: e.target.value })}\n                    value={this.state.id}\n                  />\n                </div>\n                <div>\n                  <label>name : </label>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => this.setState({ name: e.target.value })}\n                    value={this.state.name}\n                  />\n                </div>\n                <div>\n                  <label>job : </label>\n                  <input\n                    type=\"text\"\n                    onChange={(e) => this.setState({ job: e.target.value })}\n                    value={this.state.job}\n                  />\n                </div>\n                <Button variant=\"contained\" onClick={this.submitHandler}>\n                  submit\n                </Button>\n              </form>\n            </div>\n          </Paper>\n        </div>\n        <Paper elevation={3}>\n          <div>\n            <table>\n              <thead>\n                <tr>\n                  <th>id</th>\n                  <th>first_name</th>\n                  <th>last_name</th>\n                  <th>email</th>\n                  <th>avatar</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.list.map((res, index) => {\n                  return (\n                    <tr key={res.id}>\n                      <td>{res.id}</td>\n                      <td>{res.first_name}</td>\n                      <td>{res.last_name}</td>\n                      <td>{res.email}</td>\n                      <td>{res.avatar}</td>\n                      {/* <td>\n                        {\n                          <Button\n                            variant=\"contained\"\n                            className={classes.box}\n                            onClick={() => this.deleteHandler(index)}\n                          >\n                            DELETE\n                          </Button>\n                        }\n                      </td> */}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </Paper>\n      </div>\n    );\n  };\n}\n\nexport default withStyles(styles, { withTheme: true })(RetailerList);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}